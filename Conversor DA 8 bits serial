/* Inclusão de bibliotecas.*/
#include <stdio.h>
#include <wiringPi.h>
#include <math.h>
#include <sr595.h> /* Biblioteca especifica para o shift register, detalhes nas referências */

int main(void) {
	int i, bit;
	printf("Setup...\n");
	sr595Setup(100, 0, 0, 1, 2); /* A função pronta sr595Setup (ver referência) configura os 3 GPIOS usados para transmissão serial. Ela internamente chama as subfunções pinMode() e digitalWrite() 
	 Formato: 
	 sr595Setup (pinBase, numPins, dataPin, clockPin, latchPin)  dataPin  -> GPIO0
	 clockPin -> GPIO1
	 latchPin -> GPIO2 */
	printf("Setup OK \n");

	/* Declaração dos valores padrões ECG */
	int v01[] = { 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0x87, 0x87, 0x89,
			0x87, 0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x71,
			0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x83, 0x83, 0x85, 0x87, 0x89, 0x8B, 0x8D, 0x8F, 0x8F, 0x8D,
			0x89, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x91, 0xA1, 0xC1, 0xE1, 0xFE, 0xFE, 0xE0, 0xC0, 0xA1, 0x91, 0x81,
			0x71, 0x69, 0x67, 0x61, 0x55, 0x55, 0x59, 0x61, 0x67, 0x6B, 0x71,
			0x75, 0x75, 0x79, 0x7B, 0x7D, 0x7F, 0x7F, 0x7F, 0x7F, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	int v02[] = { 0x81, 0x81, 0x71, 0x61, 0x41, 0x21, 0x10, 0x20, 0x30, 0x50,
			0x61, 0x85, 0x8D, 0x97, 0x99, 0x9B, 0x99, 0x95, 0x93, 0x8D, 0x8B,
			0x89, 0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x71, 0x61, 0x41, 0x21, 0x10, 0x20, 0x30, 0x50, 0x61,
			0x85, 0x8D, 0x97, 0x99, 0x9B, 0x99, 0x95, 0x93, 0x8D, 0x8B, 0x89,
			0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x71, 0x61, 0x41, 0x21, 0x10, 0x20, 0x30, 0x50, 0x61, 0x85,
			0x8D, 0x97, 0x99, 0x9B, 0x99, 0x95, 0x93, 0x8D, 0x8B, 0x89, 0x87,
			0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x71, 0x61, 0x41, 0x21, 0x10, 0x20, 0x30, 0x50, 0x61, 0x85, 0x8D,
			0x97, 0x99, 0x9B, 0x99, 0x95, 0x93, 0x8D, 0x8B, 0x89, 0x87, 0x85,
			0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	int v03[] = { 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0x87, 0x87, 0x89,
			0x87, 0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x71,
			0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x83, 0x83, 0x85, 0x87, 0x89, 0x8B, 0x8D, 0x8F, 0x8F, 0x8D,
			0x89, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0x87, 0x87, 0x89, 0x87, 0x87,
			0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x71, 0xFE, 0x54,
			0x7C, 0x7E, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x83, 0x83, 0x85, 0x87, 0x89, 0x8B, 0x8D, 0x8F, 0x8F, 0x8D, 0x89,
			0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	int v04[] = { 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x83, 0x87, 0x87, 0x89, 0x89, 0x87, 0x85, 0x83, 0x83, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x71, 0xFE, 0x54, 0x7C, 0x7E, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x83,
			0x83, 0x85, 0x87, 0x87, 0x89, 0x89, 0x8B, 0x8D, 0x8F, 0x91, 0x93,
			0x95, 0x95, 0x95, 0x93, 0x91, 0x8B, 0x87, 0x85, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	int v05[] = { 0x81, 0x81, 0x81, 0x83, 0x87, 0x87, 0x87, 0x87, 0x85, 0x83,
			0x81, 0x81, 0x81, 0x81, 0x71, 0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81,
			0x83, 0x87, 0x89, 0x8D, 0x91, 0x93, 0x95, 0x95, 0x8F, 0x83, 0x81,
			0x81, 0x81, 0x81, 0x83, 0x87, 0x87, 0x87, 0x87, 0x85, 0x83, 0x81,
			0x81, 0x81, 0x81, 0x71, 0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81, 0x83,
			0x87, 0x89, 0x8D, 0x91, 0x93, 0x95, 0x95, 0x8F, 0x83, 0x81, 0x81,
			0x81, 0x81, 0x83, 0x87, 0x87, 0x87, 0x87, 0x85, 0x83, 0x81, 0x81,
			0x81, 0x81, 0x71, 0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81, 0x83, 0x87,
			0x89, 0x8D, 0x91, 0x93, 0x95, 0x95, 0x8F, 0x83, 0x81, 0x81, 0x81,
			0x81, 0x83, 0x87, 0x87, 0x87, 0x87, 0x85, 0x83, 0x81, 0x81, 0x81,
			0x81, 0x71, 0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81, 0x83, 0x87, 0x89,
			0x8D, 0x91, 0x93, 0x95, 0x95, 0x8F, 0x83, 0x81 };

	int v06[] = { 0x84, 0x90, 0x9B, 0x8B, 0x79, 0x73, 0x65, 0x63, 0x65, 0x6B,
			0x79, 0x85, 0x97, 0xA5, 0xA1, 0x95, 0x6A, 0x60, 0x5F, 0x63, 0x67,
			0x73, 0x7B, 0x79, 0x79, 0x77, 0x7B, 0x81, 0x89, 0x8F, 0x91, 0x8F,
			0x8C, 0x7E, 0x67, 0x5F, 0x59, 0x61, 0x6F, 0x7B, 0x81, 0x9B, 0x9F,
			0xA1, 0x9F, 0x95, 0x79, 0x6F, 0x6A, 0x6A, 0x6F, 0x75, 0x81, 0x95,
			0x9D, 0x9F, 0x95, 0x8D, 0x6B, 0x5B, 0x57, 0x51, 0x5D, 0x63, 0x66,
			0x72, 0x7B, 0x7F, 0x83, 0x87, 0x89, 0x8F, 0x93, 0x95, 0x9B, 0xA1,
			0xA7, 0xA9, 0xAB, 0xA7, 0x8A, 0x6A, 0x67, 0x69, 0x69, 0x71, 0x75,
			0x75, 0x73, 0x71, 0x71, 0x75, 0x8B, 0x93, 0x8F, 0x95, 0x8E, 0x86,
			0x75, 0x65, 0x61, 0x65, 0x6D, 0x7B, 0x87, 0x91, 0xA7, 0xB1, 0xB1,
			0xA9, 0x97, 0x7B, 0x6E, 0x64, 0x65, 0x69, 0x75, 0x7F, 0x85, 0x8F,
			0x93, 0x95, 0x91, 0x89, 0x83, 0x83, 0x81, 0x83 };

	int v07[] = { 0x81, 0x83, 0x85, 0x83, 0x7D, 0x7F, 0x83, 0x81, 0x83, 0x85,
			0x87, 0x83, 0x7F, 0x7D, 0x7D, 0x83, 0x83, 0x85, 0x83, 0x77, 0xFE,
			0x66, 0x82, 0x80, 0x81, 0x83, 0x85, 0x83, 0x7D, 0x7F, 0x83, 0x85,
			0x87, 0x8D, 0x93, 0x97, 0x95, 0x91, 0x93, 0x8F, 0x89, 0x87, 0x81,
			0x83, 0x7F, 0x7D, 0x7F, 0x81, 0x85, 0x83, 0x7D, 0x7F, 0x77, 0x7F,
			0x83, 0x85, 0x87, 0x89, 0x85, 0x81, 0x7D, 0x85, 0x87, 0x81, 0x87,
			0x89, 0x87, 0x83, 0x7D, 0x77, 0x79, 0x7D, 0x83, 0x81, 0x85, 0x83,
			0x89, 0x8F, 0x89, 0x7D, 0x79, 0x79, 0x7D, 0x81, 0x83, 0x7F, 0x81,
			0x7B, 0x77, 0x71, 0xFE, 0x50, 0x82, 0x84, 0x89, 0x85, 0x79, 0x85,
			0x85, 0x87, 0x8D, 0x8F, 0x95, 0x93, 0x91, 0x8D, 0x8D, 0x89, 0x83,
			0x85, 0x89, 0x81, 0x7D, 0x7F, 0x79, 0x87, 0x85, 0x83, 0x81, 0x85,
			0x79, 0x89, 0x85, 0x83, 0x87, 0x89, 0x85, 0x83 };

	int v08[] = { 0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0x87, 0x87, 0x89, 0x87,
			0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x71, 0xFE,
			0x54, 0x7C, 0x7E, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x83, 0x83, 0x85, 0x87, 0x89, 0x8B, 0x8D, 0x8F, 0x8F, 0x8D, 0x89,
			0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x71, 0x61, 0x41, 0x21, 0x10, 0x20, 0x30, 0x50, 0x61, 0x85, 0x8D,
			0x97, 0x99, 0x9B, 0x99, 0x95, 0x93, 0x8D, 0x8B, 0x89, 0x87, 0x83,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	int v09[] = { 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0x87, 0x87,
			0x89, 0x87, 0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x71,
			0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x83, 0x87, 0x89, 0x8D, 0x81, 0x71, 0x61, 0x41, 0x21, 0x10,
			0x20, 0x30, 0x50, 0x61, 0x85, 0x8D, 0x97, 0x99, 0x9B, 0x99, 0x95,
			0x93, 0x8D, 0x8B, 0x89, 0x87, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	int v10[] = { 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0x87, 0x87,
			0x89, 0x87, 0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x71, 0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x83, 0x83, 0x85, 0x87, 0x89, 0x8B, 0x8D, 0x8F,
			0x8F, 0x8D, 0x89, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0x87, 0x87, 0x89, 0x87, 0x87,
			0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xC0, 0x76,
			0x5E, 0x44, 0x27, 0x27, 0x45, 0x5F, 0x77, 0x81, 0x91, 0x99, 0x9B,
			0xA1, 0xAD, 0xAD, 0xA7, 0xA1, 0x9B, 0x97, 0x91, 0x8D, 0x89, 0x85,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	int v11[] = { 0x81, 0x71, 0x61, 0x41, 0x21, 0x10, 0x20, 0x30, 0x50, 0x61,
			0x85, 0x8D, 0x97, 0x99, 0x9B, 0x99, 0x95, 0x93, 0x8D, 0x8B, 0x89,
			0x87, 0x85, 0x83, 0x81, 0x81, 0x71, 0x61, 0x51, 0x30, 0x44, 0x66,
			0x76, 0x81, 0x87, 0x8B, 0x95, 0x9B, 0xA1, 0xA1, 0x9D, 0x99, 0x95,
			0x8D, 0x8B, 0x89, 0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x91, 0xA1, 0xC1, 0xE1,
			0xFE, 0xFE, 0xE0, 0xC0, 0xA1, 0x91, 0x81, 0x71, 0x69, 0x67, 0x61,
			0x55, 0x55, 0x59, 0x61, 0x67, 0x6B, 0x71, 0x75, 0x75, 0x79, 0x7B,
			0x7D, 0x7F, 0x7F, 0x7F, 0x7F, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	int v12[] = { 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x83, 0x87, 0x87, 0x89,
			0x87, 0x87, 0x85, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x71,
			0xFE, 0x54, 0x7C, 0x7E, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x83, 0x83, 0x85, 0x87, 0x89, 0x8B, 0x8D, 0x8F, 0x8F, 0x8D,
			0x89, 0x83, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
			0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81 };

	/* Programa principal:
	 * Faz-se a leitura dos 128 valores/elementos do vetor de padrão ECG declarado acima. Cada elemento, de 8 bits, é lido bit a bit e 
	 * deslocado até que se concatene os 8 bits totais do conversor. Quando se tem os 8 bits enviados para comunicação serial utilizando
	 * a função digitalWrite pula-se para o próximo elemento e assim sucessivamente  */

	while (1) {
		for (i = 0; i < 128; i++) { /* Varredura dos 128 elementos do vetor de padrão ECG */
			for (bit = 0; bit < 8; ++bit) { /* Cada elemento dos vetores do padrão ECG declarados acima é um valor em 8 bits a ser transmitido para o conversor Para cada valor a ser transmitido para o conversor DA*/
				digitalWrite(100 + bit, v01[i] & (1 << bit)); /* Envio do valor para o conversor */
			}
			delay(1 / 64); /* Delay configura para 64 Hz */
			printf("%d= ", i); /* Imprime-se o valor na tela para fins de debug */
		}
	}
	return 0;
}
